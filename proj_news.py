# -*- coding: utf-8 -*-
"""Proj-news.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oiaZGczWKpc2qi0ImdGKkIYPpFbj7gs9
"""

!pip install transformers==3.1.0

# Importing necessary libraries for Beautiful Soup
import requests
from bs4 import BeautifulSoup
from transformers import pipeline
classifier = pipeline("zero-shot-classification")
import re

import matplotlib.pyplot as plot
import pandas as pd

ual_url = 'https://www.google.com/search?rlz=1C1CHBF_enUS862US862&biw=1536&bih=722&tbm=nws&sxsrf=ALeKk00r7IQ8Scv4Phk2VVA01kXj4QbWBw%3A1606636032947&ei=AFLDX9qlOaeOwbkPu8mx-AI&q=ual+stock&oq=ual+stock&gs_l=psy-ab.3...2529.7250.0.7506.0.0.0.0.0.0.0.0..0.0....0...1.1.64.psy-ab..0.0.0....0.w9BJQIdoqnU'
dal_url = 'https://www.google.com/search?rlz=1C1CHBF_enUS862US862&biw=1536&bih=722&tbm=nws&sxsrf=ALeKk00r7IQ8Scv4Phk2VVA01kXj4QbWBw%3A1606636032947&ei=AFLDX9qlOaeOwbkPu8mx-AI&q=dal+stock&oq=dal+stock&gs_l=psy-ab.3...2529.7250.0.7506.0.0.0.0.0.0.0.0..0.0....0...1.1.64.psy-ab..0.0.0....0.w9BJQIdoqnU'
alk_url = 'https://www.google.com/search?rlz=1C1CHBF_enUS862US862&biw=1536&bih=722&tbm=nws&sxsrf=ALeKk00r7IQ8Scv4Phk2VVA01kXj4QbWBw%3A1606636032947&ei=AFLDX9qlOaeOwbkPu8mx-AI&q=alk+stock&oq=alk+stock&gs_l=psy-ab.3...2529.7250.0.7506.0.0.0.0.0.0.0.0..0.0....0...1.1.64.psy-ab..0.0.0....0.w9BJQIdoqnU'
luv_url = 'https://www.google.com/search?rlz=1C1CHBF_enUS862US862&biw=1536&bih=722&tbm=nws&sxsrf=ALeKk00r7IQ8Scv4Phk2VVA01kXj4QbWBw%3A1606636032947&ei=AFLDX9qlOaeOwbkPu8mx-AI&q=luv+stock&oq=luv+stock&gs_l=psy-ab.3...2529.7250.0.7506.0.0.0.0.0.0.0.0..0.0....0...1.1.64.psy-ab..0.0.0....0.w9BJQIdoqnU'

candidate_labels = ["positive", "negative"]

def classifyNews(url):
  page = requests.get(url)
  soup = BeautifulSoup(page.content, 'html.parser')
  results_str = soup.find_all('div')
  res_str = str(results_str)
  clean = re.compile('(?s)<style>(.*?)<\/style>|<.*?>|&([a-z0-9]+|#[0-9]{1,6}|#x[0-9a-f]{1,6});|{.*?}')
  clean_text = re.sub(clean, '', res_str)
  clean_text1 = re.sub(r'[^A-Za-z]+', ' ', clean_text)
  return classifier(clean_text1, candidate_labels)

ual_news = classifyNews(ual_url)

ual_news

ual_plot = pd.DataFrame(ual_news)
ual_plot.plot.bar(x="labels", y="scores",  rot=360, figsize=(10,7), color='navy');

dal_news = classifyNews(dal_url)

dal_news

dal_plot = pd.DataFrame(dal_news)
dal_plot.plot.bar(x="labels", y="scores",  rot=360, figsize=(10,7), color='darkolivegreen');

alk_news = classifyNews(alk_url)

alk_news

alk_plot = pd.DataFrame(alk_news)
alk_plot.plot.bar(x="labels", y="scores",  rot=360, figsize=(10,7), color='darkslategray');

luv_news = classifyNews(luv_url)

luv_news

luv_plot = pd.DataFrame(luv_news)
luv_plot.plot.bar(x="labels", y="scores",  rot=360, figsize=(10,7), color='darkorange');